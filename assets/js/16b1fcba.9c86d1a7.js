"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[647],{4385:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2},l="Files",s={unversionedId:"examples/files",id:"examples/files",title:"Files",description:"Active Table can import/export files for the following formats: csv, xls, xlsx, ods, txt. Whilst csv is supported",source:"@site/docs/examples/files.mdx",sourceDirName:"examples",slug:"/examples/files",permalink:"/examples/files",draft:!1,editUrl:"https://github.com/OvidijusParsiunas/active-table/tree/main/website/docs/examples/files.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"examples",previous:{title:"Frameworks",permalink:"/examples/frameworks"}},r={},p=[{value:"How To",id:"how-to",level:2},{value:"Examples",id:"examples",level:2},{value:"Why",id:"why",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],m={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"files"},"Files"),(0,n.kt)("p",null,"Active Table can import/export files for the following formats: ",(0,n.kt)("inlineCode",{parentName:"p"},"csv"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"xls"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"xlsx"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ods"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"txt"),". Whilst ",(0,n.kt)("inlineCode",{parentName:"p"},"csv")," is supported\nnatively and will work right out of the box, the other formats are not and require the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,n.kt)("inlineCode",{parentName:"a"},"xlsx"))," module in your project."),(0,n.kt)("h2",{id:"how-to"},"How To"),(0,n.kt)("p",null,"Active Table recognises this module via the ",(0,n.kt)("inlineCode",{parentName:"p"},"window")," element as ",(0,n.kt)("inlineCode",{parentName:"p"},"window.XLSX"),". Here are some simple ways to enable it on your project:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("b",null,"Dynamic import from dependancy")," ",(0,n.kt)("br",null),"If you are using a dependancy manager such as npm, you can dynamically import the module and assign it to window.XLSX."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("b",null,"Dynamic import from a CDN")," ",(0,n.kt)("br",null),"If you are using a dependancy manager such as npm, you can dynamically import the module from the following url and assign it to window.XLSX: ",(0,n.kt)("br",null),"https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("b",null,"Script from local file")," ",(0,n.kt)("br",null),"You can download the `xlsv` module file from the url above and import it by creating a script tag and appending it to the document body (this will automatically assign it to window.XLSX)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("b",null,"Script from a CDN")," ",(0,n.kt)("br",null),"You can create a script tag with the url above and append it to the document body (this will automatically assign it to window.XLSX).")),(0,n.kt)("p",null,"If you are using ",(0,n.kt)("inlineCode",{parentName:"p"},"TypeScript"),", add this to your file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"declare global {\n  interface Window {\n    XLSX: typeof xlsx;\n  }\n}\n")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"A project that contains a package bundler, whilst this is using React - it should work similarly across other Frameworks:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/active-table-react-xlsx-h3j7rq?file=/src/App.tsx"},"Click for Live Example")),(0,n.kt)("p",null,"VanillaJS allows you to simply append the module in a script tag:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/active-table-vanillajs-xlsx-9h3tcj?file=/index.html"},"Click for Live Example")),(0,n.kt)("h2",{id:"why"},"Why"),(0,n.kt)("p",null,"The decision for the developer to download an external dependancy was not easy to make and there are a multiple reasons that\nlead us down this road. ",(0,n.kt)("br",null),"\nThe ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,n.kt)("inlineCode",{parentName:"a"},"xlsx"))," module's post compression file size is similar to Active Table itself, which\nruled out the idea of bundling it into our project as it would effectively double its size. ",(0,n.kt)("br",null),"\nWe spent some time experimenting with dynamic imports which were very promising, but unfortunatelly we came to\na roadblock that had no simple way of overcoming; Active Table is an injectable component that exists as part of an arbitrary\nproject which can have a wide range of possible framework + bundler configurations and needs to do its best to run in as many of\nthem as possible. This is where dynamic imports become problematic as they are not supported by all bundlers and in many cases need\nextra configuration to make them work. ",(0,n.kt)("br",null),"\nHence, in order to help make the lives of the developers' as simple as possible, we have left the decision of how to implement\n",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,n.kt)("inlineCode",{parentName:"a"},"xlsx"))," in their hands and allow them to tailor the configuration to their specific setup."),(0,n.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.kt)("p",null,"If you are experiencing issues for importing/exporting files, please see ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/OvidijusParsiunas/active-table/issues"},(0,n.kt)("strong",{parentName:"a"},"github issues"))," or create\na ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/OvidijusParsiunas/active-table/issues/new/choose"},(0,n.kt)("strong",{parentName:"a"},"new issue ticket"))," and we will look into\nit as soon as possible."))}u.isMDXComponent=!0}}]);