"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[647],{4385:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const o={sidebar_position:2},s="Files",l={unversionedId:"examples/files",id:"examples/files",title:"Files",description:"Active Table can import/export files for the following formats: csv, xls, xlsx, ods, txt. Whilst csv is supported",source:"@site/docs/examples/files.mdx",sourceDirName:"examples",slug:"/examples/files",permalink:"/examples/files",draft:!1,editUrl:"https://github.com/OvidijusParsiunas/active-table/tree/main/website/docs/examples/files.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"examples",previous:{title:"Frameworks",permalink:"/examples/frameworks"}},r={},p=[{value:"How To",id:"how-to",level:2},{value:"Examples",id:"examples",level:2},{value:"Why",id:"why",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],m={toc:p},d="wrapper";function c(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"files"},"Files"),(0,i.kt)("p",null,"Active Table can import/export files for the following formats: ",(0,i.kt)("inlineCode",{parentName:"p"},"csv"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"xls"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"xlsx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ods"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"txt"),". Whilst ",(0,i.kt)("inlineCode",{parentName:"p"},"csv")," is supported\nnatively and will work right out of the box, the other formats are not and require the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,i.kt)("inlineCode",{parentName:"a"},"xlsx"))," module in your project."),(0,i.kt)("h2",{id:"how-to"},"How To"),(0,i.kt)("p",null,"Active Table recognises this module via the ",(0,i.kt)("inlineCode",{parentName:"p"},"window")," element as ",(0,i.kt)("inlineCode",{parentName:"p"},"window.XLSX"),". Here are some simple ways to enable it on your project:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Import from a dependancy")," ",(0,i.kt)("br",null),"If you are using a dependancy manager such as npm, you can import the module and assign it to window.XLSX:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'import * as xlsx from "xlsx";\n\nwindow.XLSX = xlsx;\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Dynamic import from a dependancy")," ",(0,i.kt)("br",null),"If you are using a dependancy manager such as npm, you can dynamically import the module and assign it to window.XLSX:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'import("xlsx").then((module) => {\n  window.XLSX = module;\n});\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Dynamic import from a CDN")," ",(0,i.kt)("br",null),"If you are using a dependancy manager such as npm, you can dynamically import the module from a CDN URL and assign it to window.XLSX: ",(0,i.kt)("br",null),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'import("https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js").then((module) => {\n  window.XLSX = module;\n});\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Script from a CDN")," ",(0,i.kt)("br",null),"You can add a script tag to your markup or create one via javascript. The window.XLSX property will be populated automatically:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'<script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"><\/script>\n\nconst script = document.createElement("script");\nscript.src = "https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js";\ndocument.body.appendChild(script);\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("b",null,"Script from within the project")," ",(0,i.kt)("br",null),"You can manually download the module file from the URL above, and add it as a script tag. The window.XLSX property will be populated automatically:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'<script src="xlsx.min.js"><\/script>\n\nconst script = document.createElement("script");\nscript.src = "xlsx.min.js";\ndocument.body.appendChild(script);\n')))),(0,i.kt)("br",null),(0,i.kt)("p",null,"If you are using ",(0,i.kt)("inlineCode",{parentName:"p"},"TypeScript"),", add this to the file where the module is used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"import * as xlsx from 'xlsx';\n\ndeclare global {\n  interface Window {\n    XLSX: typeof xlsx;\n  }\n}\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"React project that uses a package bundler - should work similarly for other ",(0,i.kt)("a",{parentName:"p",href:"./frameworks"},"Frameworks"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/active-table-react-xlsx-h3j7rq?file=/src/App.tsx"},"Click for Live Example")),(0,i.kt)("p",null,"VanillaJS approach with no bundler (this can also be used as fallback if above doesn't work):"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/active-table-vanillajs-xlsx-9h3tcj?file=/index.html"},"Click for Live Example")),(0,i.kt)("h2",{id:"why"},"Why"),(0,i.kt)("p",null,"The decision to have developers download external dependancies was not easily made and there were multiple reasons that\nlead us down this path. ",(0,i.kt)("br",null),"\nThe ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,i.kt)("inlineCode",{parentName:"a"},"xlsx"))," module's post-compression file size is similar to Active Table itself, which\nruled out the idea of bundling it together as it would effectively double its size. ",(0,i.kt)("br",null),"\nWe then spent some time experimenting with ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import"},"dynamic imports")," which\nseemed promising, but unfortunatelly we hit a roadblock that had no simple way of overcoming; Active Table itself is an injectable component that\nexists as part of a parent project which can use any type of a bundler to compile it. This is where\n",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import"},"dynamic imports")," become\nproblematic as they are not supported by all bundlers and in many cases need extra configuration to work. ",(0,i.kt)("br",null),"\nTherefore, to make the lives of our developers as simple as possible; for use cases that do not need the extra functionality - Active Table can\nbe installed without any extra work, for use cases that do - we leave the decision of how to implement ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/xlsx"},(0,i.kt)("inlineCode",{parentName:"a"},"xlsx")),"\nin their hands to alllow them to tailor the approach for their project."),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("p",null,"If you are experiencing issues for importing/exporting files, please see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OvidijusParsiunas/active-table/issues"},(0,i.kt)("strong",{parentName:"a"},"github issues"))," or create\na ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OvidijusParsiunas/active-table/issues/new/choose"},(0,i.kt)("strong",{parentName:"a"},"new issue ticket"))," and we will look into\nit as soon as possible."))}c.isMDXComponent=!0}}]);